q
sign
decode_str
q
OpenSSL::HMAC.hexdigest(digest, "GVg9ANY2NxMauWC12ZtjPw", str)
            en_str = OpenSSL::HMAC.hexdigest(digest, "GVg9ANY2NxMauWC12ZtjPw", str)
            digest = OpenSSL::Digest.new('sha1')
            str = "app_key=#{app_key}&timestamp=#{ts}&secret=#{sign}"
 app_key, ts, sign = access_token["app_key"], access_token["timestamp"], access_token["sign"]
OpenSSL::Digest.new('md5')
OpenSSL::Digest.new('sha1')
app_key
ts
sign
en_str
q
c
q
JSON.parse(dd)["value"]["timestamp"]
JSON.parse(dd)["value"]["app_key"]
JSON.parse(dd)["value"]
JSON.parse(dd)
dd = params[:access_token]
params[:access_token]
params
c
JSON.parse(dd)
dd = params[:access_token]
params[:access_token]
params
q
c
params
q
request.params
request
params[:adIds]
params["adIds"]
params
c
params[:app_key]
params.inspect
params
c
params
c
URI(dd).host
URI(dd)
dd = request.headers["Referer"]
request.headers["Referer"]
request.headers
request.headers["Origin"]
params["callback"]
params
request.headers["Origin"]
request.headers[]
request.headers
request
c
params
c
params
request.headers
request.headers["Xrkad-Request-Token"]
request_in_whitelist?(host)
c
request_in_whitelist?
request_in_whitelist?(host)
c
request.headers["Xrkad-Request-Origin"]
request.headers["Xrkad-Request-Origin"].domain
request.headers["Xrkad-Request-Origin"].host
request.headers["Xrkad-Request-Origin"]
request.headers
request.origin
request
c
request.headers["CameraStork-Publisher-Ori
request.headers["Origin"]
request.headers
request
q
c
params["token"]
params["LQ55zl84j-wTeC8fHsZvNg"]
params["element"]
params
c
response.headers["X-Frame-Options"] = nil
response.headers["X-Frame-Options"]
response.headers
response
c
response.headers["X-Frame-Options"]
response.headers
response
request.headers["X-Frame-Options"]
request.headers
request
c
